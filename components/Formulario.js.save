import React, { useEffect, useState } from 'react'
import { Text, View, StyleSheet, TouchableHighlight, Alert } from 'react-native'
import { useFonts } from '@expo-google-fonts/inter'
import { Picker } from '@react-native-picker/picker'
OBimport axios from 'axios'
O
coOOOnst Formulario = () => {
  let [fontsLoaded] = useFonts({
 OOqN
   'Lato-Black': require('../assets/fonts/Lato-Black.ttf'),
  })
  useEffect(() => {
    const consultarAPI = async () => {
      const url =
        'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD'
      const result = await axios.get(url)
      setCriptomonedas(result.data.Data)
    }
    consultarAPI()
  }, [])

  const [moneda, setMoneda] = useState('')
  const [criptomoneda, setCriptomoneda] = useState('')
  const [criptomonedas, setCriptomonedas] = useState('')

  const getMoneda = moneda => {
    setMoneda(moneda)
  }

  const getCriptomoneda = cripto => {
    setCriptomoneda(cripto)
  }

  const cotizarPrecio = () => {
    if (moneda.trim() === '' || criptomoneda.trim() === '') {
      showAlert()
      return
    }

    console.log('Cotizando')
  }

  const showAlert = () => {
    Alert.alert('Error..', 'Ambos campos son obligatorios', [{ text: 'OK' }])
  }

  return (
    <View>
      <Text style={styles.label}>Moneda</Text>
      <Picker
        selectedValue={moneda}
        onValueChange={moneda => getMoneda(moneda)}
        itemStyle={{ height: 120 }}
      >
        <Picker.Item label="- Seleccione -" value="" />
        <Picker.Item label="Dolar de Estados Unidos" value="USD" />
        <Picker.Item label="Peso Mexicano" value="MXN" />
        <Picker.Item label="Libra Esterlina" value="GBP" />
        <Picker.Item label="Euro" value="EUR" />
      </Picker>
      <Text style={styles.label}>Criptomoneda</Text>
      <Picker
        selectedValue={criptomoneda}
        onValueChange={cripto => getCriptomoneda(cripto)}
        itemStyle={{ height: 120 }}
      >
        <Picker.Item label="- Seleccione -" value="" />
        {criptomonedas.map(cripto => (
          <Picker.Item
            key={cripto.CoinInfo.Id}
            label={cripto.CoinInfo.FullName}
            value={cripto.CoinInfo.Name}
          />
        ))}
      </Picker>

      <TouchableHighlight
        style={styles.btnCotizar}
        onPress={() => cotizarPrecio()}
      >
        <Text style={styles.textoCotizar}>Cotizar</Text>
      </TouchableHighlight>
    </View>
  )
}

const styles = StyleSheet.create({
  label: {
    fontFamily: 'Lato-Black',
    textTransform: 'uppercase',
    fontSize: 22,
    marginVertical: 20,
  },
  btnCotizar: {
    backgroundColor: '#5e49e2',
    padding: 10,
    marginTop: 20,
  },
  textoCotizar: {
    color: '#fff',
    fontSize: 18,
    textTransform: 'uppercase',
    fontFamily: 'Lato-Black',
    textAlign: 'center',
  },
})

export default Formulario
